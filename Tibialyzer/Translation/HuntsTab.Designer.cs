//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tibialyzer.Translation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class HuntsTab {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HuntsTab() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tibialyzer.Translation.HuntsTab", typeof(HuntsTab).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically Write Loot To File.
        /// </summary>
        internal static string automaticallyWriteLootToFileCheckbox {
            get {
                return ResourceManager.GetString("automaticallyWriteLootToFileCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whenever you find loot, save the loot message to the file &apos;Database/loot.txt&apos;..
        /// </summary>
        internal static string automaticallyWriteLootToFileCheckboxTooltip {
            get {
                return ResourceManager.GetString("automaticallyWriteLootToFileCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Hunt On Startup.
        /// </summary>
        internal static string clearHuntOnStartupCheckbox {
            get {
                return ResourceManager.GetString("clearHuntOnStartupCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this is checked, this hunt will be automatically cleared when Tibialyzer is restarted..
        /// </summary>
        internal static string clearHuntOnStartupCheckboxTooltip {
            get {
                return ResourceManager.GetString("clearHuntOnStartupCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creature List.
        /// </summary>
        internal static string creatureListHeader {
            get {
                return ResourceManager.GetString("creatureListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display All Creatures.
        /// </summary>
        internal static string displayAllCreaturesCheckbox {
            get {
                return ResourceManager.GetString("displayAllCreaturesCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the loot@ command, only creatures specified in the box below are shown if this is selected..
        /// </summary>
        internal static string displayAllCreaturesCheckboxTooltip {
            get {
                return ResourceManager.GetString("displayAllCreaturesCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display All Items As Stackable.
        /// </summary>
        internal static string displayAllItemsAsStackableCheckbox {
            get {
                return ResourceManager.GetString("displayAllItemsAsStackableCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the loot@ view, display all items as if they were stackable..
        /// </summary>
        internal static string displayAllItemsAsStackableCheckboxTooltip {
            get {
                return ResourceManager.GetString("displayAllItemsAsStackableCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exp Value.
        /// </summary>
        internal static string expValueLabel {
            get {
                return ResourceManager.GetString("expValueLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always add Tracked Creature to hunt.
        /// </summary>
        internal static string gatherTrackedKillsCheckbox {
            get {
                return ResourceManager.GetString("gatherTrackedKillsCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a creature specified in the box below is killed, the loot of that creature is always added to this hunt (in addition to the active hunt)..
        /// </summary>
        internal static string gatherTrackedKillsCheckboxTooltip {
            get {
                return ResourceManager.GetString("gatherTrackedKillsCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hunt Options.
        /// </summary>
        internal static string huntOptionsHeader {
            get {
                return ResourceManager.GetString("huntOptionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore Low Experience Creatures.
        /// </summary>
        internal static string ignoreLowExperienceCheckbox {
            get {
                return ResourceManager.GetString("ignoreLowExperienceCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the loot@ view, do not display creatures that give less than {Exp Value} experience..
        /// </summary>
        internal static string ignoreLowExperienceCheckboxTooltip {
            get {
                return ResourceManager.GetString("ignoreLowExperienceCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of Hunts.
        /// </summary>
        internal static string listOfHuntsHeader {
            get {
                return ResourceManager.GetString("listOfHuntsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loot Display.
        /// </summary>
        internal static string lootDisplayHeader {
            get {
                return ResourceManager.GetString("lootDisplayHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loot Display Options.
        /// </summary>
        internal static string lootDisplayOptionsHeader {
            get {
                return ResourceManager.GetString("lootDisplayOptionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set As Active Hunt.
        /// </summary>
        internal static string setAsActiveHuntButton {
            get {
                return ResourceManager.GetString("setAsActiveHuntButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the currently selected hunt as the active hunt. Any creatures killed will be added to the currently active hunt..
        /// </summary>
        internal static string setAsActiveHuntButtonTooltip {
            get {
                return ResourceManager.GetString("setAsActiveHuntButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate if Tracked Creature is killed.
        /// </summary>
        internal static string switchOnKillCheckbox {
            get {
                return ResourceManager.GetString("switchOnKillCheckbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a creature specified in the box below is killed, this hunt is made the currently active hunt..
        /// </summary>
        internal static string switchOnKillCheckboxTooltip {
            get {
                return ResourceManager.GetString("switchOnKillCheckboxTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracked Creatures.
        /// </summary>
        internal static string trackedCreaturesHeader {
            get {
                return ResourceManager.GetString("trackedCreaturesHeader", resourceCulture);
            }
        }
    }
}
